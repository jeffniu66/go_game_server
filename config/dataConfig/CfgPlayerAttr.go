/*
* This file generated by Acinconfig tool, don't modify it manually! 
*
* proto content: 
////////////////////////////////////////////////////////////////////////
syntax = "proto3";
package dataConfig;

// key:["ID"]
message CfgPlayerAttr{
	int32 ID = 1;		//唯一id
	int32 InitData = 2;		//初始值
	int32 IncData = 3;		//增量值
	int32 MaxData = 4;		//最大值
}

message PlayerAttrConfigData{
	repeated CfgPlayerAttr config = 1;
}

////////////////////////////////////////////////////////////////////////
*/

package dataConfig 

import (
	"github.com/golang/protobuf/proto"
	"io/ioutil"
	"crypto/md5"
	"encoding/hex"
	"os"
	"io"
	"fmt"
	"go_game_server/config"
)

func getCfgPlayerAttrKey(ID int32) int64 {
	return int64(ID)
}

func GetCfgPlayerAttrMd5() string{
	file, err := os.Open("./config/protoConfig/CfgPlayerAttr.bytes")
	if err != nil{
		panic("file not exsit! %!s(MISSING)")
		return ""
	}
	defer file.Close()
	md5 := md5.New()
	io.Copy(md5, file)

	return hex.EncodeToString(md5.Sum(nil))
}

func GetCfgPlayerAttr(ID int32) *CfgPlayerAttr {
	key := getCfgPlayerAttrKey(ID)
	if item, ok := MapCfgPlayerAttr[key]; ok {
		return item 
	}
	return nil
}

var MapCfgPlayerAttr = make(map[int64]*CfgPlayerAttr)


var Md5CfgPlayerAttr string

func init() {
	cfg := &PlayerAttrConfigData{}
	config.ConfigList = append(config.ConfigList, cfg)
	cfg.HotInit()
	Md5CfgPlayerAttr = GetCfgPlayerAttrMd5()
}
func (cfg *PlayerAttrConfigData)HotInit() {
	if Md5CfgPlayerAttr != GetCfgPlayerAttrMd5(){
		fmt.Println("1 = ", Md5CfgPlayerAttr, "2 = ", GetCfgPlayerAttrMd5())
		Md5CfgPlayerAttr = GetCfgPlayerAttrMd5()
		data, err := ioutil.ReadFile("./config/protoConfig/CfgPlayerAttr.bytes")
		if err != nil {
			panic("file not exsit! ./config/protoConfig/CfgPlayerAttr.bytes")
			return
		}

		err = proto.Unmarshal(data, cfg)
		if err != nil {
			panic("proto data unmarshal fail!")
			return 
		}

		for _, item := range cfg.Config {
			key := getCfgPlayerAttrKey(item.ID)
			MapCfgPlayerAttr[key] = item
		}
	}
}